import os
import pandas as pd
import requests
from bs4 import BeautifulSoup
from selenium import webdriver
from selenium.webdriver.firefox.service import Service
from selenium.webdriver.firefox.options import Options
from urllib.parse import urljoin

# Set up Selenium with the updated method to specify the executable path
options = Options()
options.binary_location = r'C:\Program Files\Mozilla Firefox\firefox.exe'
service = Service(executable_path='C:\webdrivers\geckodriver.exe')
driver = webdriver.Firefox(options=options, service=service)

# CSV file path
input_csv_file = r"C:/Users/PBansal/Desktop/Current_work/special_project/code.csv"
data = pd.read_csv(input_csv_file)

for ind in data.index:
    link = str(data.at[ind, 'Links'])
    catalog_no = str(data.at[ind, 'CatalogNo'])
    driver.get(link)
    html_content = driver.page_source
    soup = BeautifulSoup(html_content, 'lxml')

    # Improved error handling
    try:
        image_container = soup.find('div', class_='product-detail-image')
        if image_container:
            image_tag = image_container.find('img')
            if image_tag and 'src' in image_tag.attrs:
                image_url = image_tag['src']
                if not image_url.startswith(('http://', 'https://')):
                    image_url = urljoin(link, image_url)

                image_response = requests.get(image_url)
                image_response.raise_for_status()
                # Save each image with a unique name
                image_filename = os.path.join(
                    "C:/Users/PBansal/Desktop/Current_work/special_project/Images_c",
                    f'{catalog_no}.jpg')

                with open(image_filename, 'wb') as file:
                    file.write(image_response.content)
                print(f"Image downloaded successfully:{ind}")
            else:
                print(f"Image tag with 'src' not found on page: {link}")
        else:
            print(f"Image container not found on page: {link}")
    except Exception as e:
        print(f"An error occurred with link {link}: {e}")

driver.quit()

